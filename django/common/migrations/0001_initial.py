# Generated by Django 5.1.2 on 2025-02-22 20:55

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("start_day", models.DateField(blank=True, null=True)),
                ("end_day", models.DateField(blank=True, null=True)),
                ("timezone", models.CharField(blank=True, max_length=100, null=True)),
                ("country", models.CharField(blank=True, max_length=100, null=True)),
                ("location", models.CharField(blank=True, max_length=100, null=True)),
                ("comment", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Log",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "robot_version",
                    models.CharField(blank=True, max_length=5, null=True),
                ),
                ("player_number", models.IntegerField(blank=True, null=True)),
                ("head_number", models.IntegerField(blank=True, null=True)),
                ("body_serial", models.CharField(blank=True, max_length=20, null=True)),
                ("head_serial", models.CharField(blank=True, max_length=20, null=True)),
                ("representation_list", models.JSONField(blank=True, null=True)),
                ("log_path", models.CharField(blank=True, max_length=200, null=True)),
                (
                    "combined_log_path",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "sensor_log_path",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Experiment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=100, null=True)),
                ("field", models.CharField(blank=True, max_length=100, null=True)),
                ("comment", models.TextField(blank=True, null=True)),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="experiments",
                        to="common.event",
                    ),
                ),
            ],
            options={
                "unique_together": {("event_id", "name")},
            },
        ),
        migrations.CreateModel(
            name="Game",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("team1", models.CharField(blank=True, max_length=100, null=True)),
                ("team2", models.CharField(blank=True, max_length=100, null=True)),
                ("half", models.CharField(blank=True, max_length=100, null=True)),
                ("is_testgame", models.BooleanField(blank=True, null=True)),
                ("head_ref", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "assistent_ref",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("field", models.CharField(blank=True, max_length=100, null=True)),
                ("start_time", models.DateTimeField(blank=True, null=True)),
                ("score", models.CharField(blank=True, max_length=100, null=True)),
                ("comment", models.TextField(blank=True, null=True)),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="games",
                        to="common.event",
                    ),
                ),
            ],
            options={
                "unique_together": {("event_id", "start_time", "half")},
            },
        ),
        migrations.CreateModel(
            name="LogStatus",
            fields=[
                (
                    "log",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        related_name="log_status",
                        serialize=False,
                        to="common.log",
                    ),
                ),
                ("FrameInfo", models.IntegerField(blank=True, null=True)),
                ("BallModel", models.IntegerField(blank=True, null=True)),
                ("BallCandidates", models.IntegerField(blank=True, null=True)),
                ("BallCandidatesTop", models.IntegerField(blank=True, null=True)),
                ("CameraMatrix", models.IntegerField(blank=True, null=True)),
                ("CameraMatrixTop", models.IntegerField(blank=True, null=True)),
                ("FieldPercept", models.IntegerField(blank=True, null=True)),
                ("FieldPerceptTop", models.IntegerField(blank=True, null=True)),
                ("GoalPercept", models.IntegerField(blank=True, null=True)),
                ("GoalPerceptTop", models.IntegerField(blank=True, null=True)),
                ("MultiBallPercept", models.IntegerField(blank=True, null=True)),
                ("RansacLinePercept", models.IntegerField(blank=True, null=True)),
                ("RansacCirclePercept2018", models.IntegerField(blank=True, null=True)),
                ("ShortLinePercept", models.IntegerField(blank=True, null=True)),
                ("ScanLineEdgelPercept", models.IntegerField(blank=True, null=True)),
                ("ScanLineEdgelPerceptTop", models.IntegerField(blank=True, null=True)),
                ("OdometryData", models.IntegerField(blank=True, null=True)),
                ("IMUData", models.IntegerField(blank=True, null=True)),
                ("FSRData", models.IntegerField(blank=True, null=True)),
                ("ButtonData", models.IntegerField(blank=True, null=True)),
                ("SensorJointData", models.IntegerField(blank=True, null=True)),
                ("AccelerometerData", models.IntegerField(blank=True, null=True)),
                ("InertialSensorData", models.IntegerField(blank=True, null=True)),
                ("MotionStatus", models.IntegerField(blank=True, null=True)),
                ("MotorJointData", models.IntegerField(blank=True, null=True)),
                ("GyrometerData", models.IntegerField(blank=True, null=True)),
                ("num_cognition_frames", models.IntegerField(blank=True, null=True)),
                ("num_motion_frames", models.IntegerField(blank=True, null=True)),
                ("num_jpg_bottom", models.IntegerField(blank=True, null=True)),
                ("num_jpg_top", models.IntegerField(blank=True, null=True)),
                ("num_bottom", models.IntegerField(blank=True, null=True)),
                ("num_top", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "verbose_name_plural": "Log status",
            },
        ),
        migrations.AddField(
            model_name="log",
            name="experiment",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="common.experiment",
            ),
        ),
        migrations.AddField(
            model_name="log",
            name="game",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="common.game",
            ),
        ),
        migrations.CreateModel(
            name="VideoRecording",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("urls", models.JSONField(blank=True, null=True)),
                ("comment", models.TextField(blank=True, null=True)),
                (
                    "experiment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="common.experiment",
                    ),
                ),
                (
                    "game",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recordings",
                        to="common.game",
                    ),
                ),
            ],
        ),
    ]
