# maybe the correct values yaml: https://github.com/bitnami/charts/blob/33b8e700bdecedd8e2130d442adc4593bb76816c/bitnami/postgresql/values.yaml
postgresql:
  image:
    debug: true

  auth:
    username: rm_admin
    database: rm
    existingSecret: postgres-rm-secret
    secretKeys:
      adminPasswordKey: password
      userPasswordKey: password

  primary:
    initdb:
      user: "postgres"
      scripts:
          00_init_db.sh: |
            echo "RM_POSTGRES_DB: $RM_POSTGRES_DB"
            # Check if user exists, if not create it
            psql -d postgres -c "DO \$\$ 
            BEGIN
              IF NOT EXISTS (SELECT FROM pg_catalog.pg_user WHERE usename = '$RM_POSTGRES_USER') THEN
                CREATE USER $RM_POSTGRES_USER WITH PASSWORD '${RM_POSTGRES_PASS}' CREATEDB;
              END IF;
            END
            \$\$;"

            echo "RM_POSTGRES_DB: $RM_POSTGRES_DB"
            # Check if database exists, if not create it (assuming you want this too)
            echo "SELECT 'CREATE DATABASE $RM_POSTGRES_DB' WHERE NOT EXISTS (SELECT FROM pg_database WHERE datname = '$RM_POSTGRES_DB')\gexec" | psql -d postgres 

            psql -d postgres -c "GRANT ALL ON DATABASE $RM_POSTGRES_DB TO $RM_POSTGRES_USER;"
            psql -d postgres -c "ALTER DATABASE $RM_POSTGRES_DB OWNER TO $RM_POSTGRES_USER;"
            psql -d postgres -c "GRANT ALL ON SCHEMA PUBLIC TO $RM_POSTGRES_USER;"
            psql -d postgres -c "GRANT SET ON PARAMETER session_replication_role TO $RM_POSTGRES_USER;"

    pgHbaConfiguration: |
      local   all             postgres                              peer
      host     all             all             0.0.0.0/0               md5
      host     all             all             ::/0                    md5
      local    all             all                                     md5
      host     all             all        127.0.0.1/32                 md5
      host     all             all        ::1/128                      md5
    containerSecurityContext:
      runAsUser: 1001
      runAsGroup: 1001
      fsGroup: 1001

    extraEnvVars:
      - name: PGDATABASE
        value: rm
      - name: PGUSER
        value: postgres
    
    extraEnvVarsSecret: postgres-rm-env
# TODO: no persistence?