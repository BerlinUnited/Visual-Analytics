name: Build Electron App

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*' # Trigger on any tag push that starts with 'v'
  

jobs:
  build-windows:
    name: Build for Windows
    runs-on: windows-latest

    defaults:
      run:
        working-directory: frontend  # Set default working directory for all run steps

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: "frontend"

      - name: Install dependencies
        run: npm install # or npm install or yarn install

      - name: Build Electron app
        run: npm run package:electron
        env:
          CI: true

      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v4
        with:
          name: electron-app-windows
          path: frontend/dist/*.exe
          retention-days: 1

  build-linux:
    name: Build for Linux
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: frontend # Set default working directory for all run steps

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: "frontend"

      - name: Install dependencies
        run: npm install

      - name: Build Electron app for Linux
        run: npm run package:electron -- --linux # Add a flag to specifically build for Linux
        env:
          CI: true

      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v4
        with:
          name: electron-app-linux
          path: frontend/dist/*.AppImage
          retention-days: 1

  create-release:
    name: Create Release and Upload Artifacts
    needs: [build-windows, build-linux] # This job depends on both build jobs
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: List downloaded files (for debugging)
        run: ls -R artifacts

      - name: Create Release and Upload Artifacts
        id: create_release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            artifacts/electron-app-windows/*.exe
            artifacts/electron-app-linux/*.AppImage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}